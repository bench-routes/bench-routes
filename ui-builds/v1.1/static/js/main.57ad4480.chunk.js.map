{"version":3,"sources":["utils/brt.ts","pages/Dashboard/CPUUsage.tsx","pages/Dashboard/MemoryUsage.tsx","pages/Dashboard/Disk.tsx","pages/Dashboard/MemoryDetails.tsx","pages/Dashboard/SystemMetrics.tsx","utils/useFetch.ts","utils/types.ts","pages/Dashboard/Dashboard.tsx","pages/FloodPing/index.tsx","pages/Jitter/index.tsx","pages/Monitoring/index.tsx","pages/Ping/index.tsx","pages/Settings/index.tsx","router/Navigation.tsx","layouts/Sidebar.tsx","layouts/BaseLayout.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["TimeInstance","React","memo","series","name","data","cpuMetrics","options","chart","type","animations","enabled","easing","speed","animateGradually","delay","dynamicAnimation","background","datalabels","stroke","show","curve","lineCap","width","subtitle","text","align","height","memoryUsagePercentMetrics","seriesDiskIO","diskIO","seriesCache","cache","className","availableBytes","freeBytes","totalBytes","usedBytes","TabPanel","props","children","value","index","other","role","hidden","id","aria-labelledby","Box","p","a11yProps","useStyles","makeStyles","theme","root","flexGrow","backgroundColor","palette","paper","SystemMetrics","showLoader","classes","useState","setValue","endTimestamp","Date","getTime","Hour","useEffect","url","status","response","setResponse","error","setError","isLoading","setIsLoading","requestSent","setRequestSent","fetchData","a","fetch","credentials","res","ok","Error","statusText","json","setTimeout","useFetch","Alert","severity","responseInFormat","metricValues","cpuUsageSlice","diskSliceCache","diskSliceDiskIO","memorySliceAvailableBytes","memorySliceFreeBytes","memorySliceTotalBytes","memorySliceUsedBytes","memoryUsedPercentSlice","metric","push","y","cpuTotalUsage","x","normalizedTime","disk","cached","memory","usedPercent","segregateMetrics","values","style","marginBottom","AppBar","position","Tabs","onChange","_event","newValue","indicatorColor","Tab","label","MemoryUsage","Disk","Dashboard","updateLoader","Card","CardContent","FloodPing","Jitter","Monitoring","Ping","Settings","Navigator","exact","path","render","component","display","nested","paddingLeft","spacing","drawerPaper","whiteSpace","transition","transitions","create","sharp","duration","enteringScreen","drawerPaperClose","overflowX","leavingScreen","breakpoints","up","toolbarIcon","alignItems","justifyContent","padding","mixins","toolbar","settings","bottom","Sidebar","handleDrawerClose","open","testListOpen","setTestListOpen","showTestList","menuItems","ListItem","button","Link","to","ListItemIcon","ListItemText","primary","AccessAlarm","NetworkCheck","onClick","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","List","disablePadding","Drawer","variant","clsx","IconButton","ChevronLeft","Divider","_useStyles","appBar","zIndex","drawer","appBarShift","marginLeft","title","paddingRight","menuButton","marginRight","menuButtonHidden","color","appBarSpacer","content","overflow","container","paddingTop","paddingBottom","BaseLayout","_classes","loader","setLoader","useCallback","setOpen","CssBaseline","Toolbar","edge","aria-label","Menu","Typography","noWrap","Badge","badgeContent","Notifications","LinearProgress","Container","maxWidth","createMuiTheme","blue","typography","fontFamily","join","fontSize","responsiveFontSizes","App","ThemeProvider","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"uOAAKA,E,mRCwDUC,MAAMC,MAhDe,SAAC,GAAoB,IAEjDC,EAAS,CACb,CACEC,KAAM,MACNC,KALkD,EAAjBC,aAyCrC,OACE,oCACE,kBAAC,IAAD,CAAOH,OAAQA,EAAQI,QAnCX,CACdC,MAAO,CACLC,KAAM,OACNC,WAAY,CACVC,SAAS,EACTC,OAAQ,YACRC,MAAO,IACPC,iBAAkB,CAChBH,SAAS,EACTI,MAAO,KAETC,iBAAkB,CAChBL,SAAS,EACTE,MAAO,MAGXI,WAAY,QAEdC,WAAY,CACVP,SAAS,GAEXQ,OAAQ,CACNC,MAAM,EACNC,MAAO,WACPC,QAAS,OACTC,MAAO,GAETC,SAAU,CACRC,KAAM,yBACNC,MAAO,WAMkCC,OAAO,Y,oCCOvC1B,MAAMC,MAlDmC,SAAC,GAElD,IAECC,EAAS,CACb,CACEC,KAAM,SACNC,KALA,EADJuB,4BA0CA,OACE,oCACE,kBAAC,IAAD,CAAOzB,OAAQA,EAAQI,QAnCX,CACdC,MAAO,CACLC,KAAM,OACNC,WAAY,CACVC,SAAS,EACTC,OAAQ,YACRC,MAAO,IACPC,iBAAkB,CAChBH,SAAS,EACTI,MAAO,KAETC,iBAAkB,CAChBL,SAAS,EACTE,MAAO,MAGXI,WAAY,QAEdC,WAAY,CACVP,SAAS,GAEXQ,OAAQ,CACNC,MAAM,EACNC,MAAO,WACPC,QAAS,OACTC,MAAO,GAETC,SAAU,CACRC,KAAM,mCACNC,MAAO,WAMkCC,OAAO,YC+CvC1B,MAAMC,MA3FiB,SAAC,GAAuB,IACtD2B,EAAe,CACnB,CACEzB,KAAM,sDACNC,KAJuD,EAApByB,SAOjCC,EAAc,CAClB,CACE3B,KAAM,mBACNC,KAVuD,EAAZ2B,QA+E/C,OACE,yBAAKC,UAAU,OACb,yBAAKA,UAAU,YACb,kBAAC,IAAD,CAAO9B,OAAQ0B,EAActB,QApEb,CACpBC,MAAO,CACLC,KAAM,OACNC,WAAY,CACVC,SAAS,EACTC,OAAQ,YACRC,MAAO,IACPC,iBAAkB,CAChBH,SAAS,EACTI,MAAO,KAETC,iBAAkB,CAChBL,SAAS,EACTE,MAAO,MAGXI,WAAY,QAEdC,WAAY,CACVP,SAAS,GAEXQ,OAAQ,CACNC,MAAM,EACNC,MAAO,WACPC,QAAS,OACTC,MAAO,GAETC,SAAU,CACRC,KAAM,sDACNC,MAAO,WAuCgDC,OAAO,SAE9D,yBAAKM,UAAU,YACb,kBAAC,IAAD,CAAO9B,OAAQ4B,EAAaxB,QAvCb,CACnBC,MAAO,CACLC,KAAM,OACNC,WAAY,CACVC,SAAS,EACTC,OAAQ,YACRC,MAAO,IACPC,iBAAkB,CAChBH,SAAS,EACTI,MAAO,KAETC,iBAAkB,CAChBL,SAAS,EACTE,MAAO,MAGXI,WAAY,QAEdC,WAAY,CACVP,SAAS,GAEXQ,OAAQ,CACNC,MAAM,EACNC,MAAO,WACPC,QAAS,OACTC,MAAO,GAETC,SAAU,CACRC,KAAM,mBACNC,MAAO,WAU8CC,OAAO,aCnBnD1B,MAAMC,MAhEyB,SAAC,GAKxC,IACCC,EAAS,CACb,CACEC,KAAM,YACNC,KAJA,EAJJ6B,gBAUE,CACE9B,KAAM,OACNC,KARA,EAHJ8B,WAaE,CACE/B,KAAM,QACNC,KAZA,EAFJ+B,YAgBE,CACEhC,KAAM,OACNC,KAhBA,EADJgC,YAqDA,OACE,oCACE,kBAAC,IAAD,CAAOlC,OAAQA,EAAQI,QAnCX,CACdC,MAAO,CACLC,KAAM,OACNC,WAAY,CACVC,SAAS,EACTC,OAAQ,YACRC,MAAO,IACPC,iBAAkB,CAChBH,SAAS,EACTI,MAAO,KAETC,iBAAkB,CAChBL,SAAS,EACTE,MAAO,MAGXI,WAAY,QAEdC,WAAY,CACVP,SAAS,GAEXQ,OAAQ,CACNC,MAAM,EACNC,MAAO,WACPC,QAAS,OACTC,MAAO,GAETC,SAAU,CACRC,KAAM,uCACNC,MAAO,WAMkCC,OAAO,a,SJtEjD3B,O,+BAAAA,I,+BAAAA,I,qBAAAA,I,sBAAAA,I,mBAAAA,I,mBAAAA,M,KASUA,QKQf,SAASsC,EAASC,GAAQ,IAChBC,EAAqCD,EAArCC,SAAUC,EAA2BF,EAA3BE,MAAOC,EAAoBH,EAApBG,MAAUC,EADZ,YACsBJ,EADtB,8BAGvB,OACE,uCACEK,KAAK,WACLC,OAAQJ,IAAUC,EAClBI,GAAE,0BAAqBJ,GACvBK,kBAAA,qBAA+BL,IAC3BC,GAEHF,IAAUC,GAAS,kBAACM,EAAA,EAAD,CAAKC,EAAG,GAAIT,IAWtC,SAASU,EAAUR,GACjB,MAAO,CACLI,GAAG,cAAD,OAAgBJ,GAClB,gBAAgB,mBAAhB,OAAoCA,IAIxC,IAAMS,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,SAAU,EACVC,gBAAiBH,EAAMI,QAAQxC,WAAWyC,WAsJ/BC,EAhF+B,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACzCC,EAAUV,IADgD,EAEtClD,IAAM6D,SAAS,GAFuB,mBAEzDrB,EAFyD,KAElDsB,EAFkD,KAG1DC,EAAsC,KAAvB,IAAIC,MAAOC,UAAsBlE,EAAamE,KAEnEC,qBAAU,WACRR,GAAW,KACV,CAACA,IACJ,IARgE,EC7G1C,SAAeS,EAAa9D,GAA0C,IAAD,EAC3DuD,mBAAyB,CAAEQ,OAAQ,mBADwB,mBACpFC,EADoF,KAC1EC,EAD0E,OAEjEV,qBAFiE,mBAEpFW,EAFoF,KAE7EC,EAF6E,OAGzDZ,oBAAkB,GAHuC,mBAGpFa,EAHoF,KAGzEC,EAHyE,OAIrDd,oBAAkB,GAJmC,mBAIpFe,EAJoF,KAIvEC,EAJuE,KA8B3F,OAxBAV,qBAAU,WACR,IAAMW,EAAS,uCAAG,8BAAAC,EAAA,sEAEdJ,GAAa,GACbE,GAAe,GAHD,SAIIG,MAAMZ,EAAD,aAAQrC,MAAO,WAAYkD,YAAa,eAAkB3E,IAJnE,WAIR4E,EAJQ,QAKLC,GALK,uBAMZR,GAAa,GACbE,GAAe,GACT,IAAIO,MAAMF,EAAIG,YARR,yBAUMH,EAAII,OAVV,QAURA,EAVQ,OAWdf,EAAYe,GACZX,GAAa,GAZC,kDAcdF,EAAS,EAAD,IAdM,0DAAH,qDAiBVG,GACHW,YAAW,WACTT,MACC,OAEJ,CAACV,EAAK9D,EAASsE,IACX,CAAEN,WAAUE,QAAOE,aD2FEc,CAAQ,UEnIf,wBFmIe,6DAC6BzB,IADzDO,EAZwD,EAYxDA,SAIR,GAhBgE,EAY9CE,MAMhB,OADAb,GAAW,GACJ,kBAAC8B,EAAA,EAAD,CAAOC,SAAS,SAAhB,sCAET,IAAKpB,EAASlE,KACZ,OAAO,kBAACqF,EAAA,EAAD,CAAOC,SAAS,QAAhB,8BAGT,IAAMC,EA1FiB,SAACC,GACxB,IADwD,EAClDC,EAA6B,GAE7BC,EAA8B,GAC9BC,EAA+B,GAE/BC,EAAyC,GACzCC,EAAoC,GACpCC,EAAqC,GACrCC,EAAoC,GAEpCC,EAAsC,GAXY,cAanCR,GAbmC,IAaxD,2BAAmC,CAAC,IAAzBS,EAAwB,QACjCR,EAAcS,KAAK,CACjBC,EAAGF,EAAO7D,MAAMgE,cAChBC,EAAGJ,EAAOK,iBAGZZ,EAAeQ,KAAK,CAClBC,EAAGF,EAAO7D,MAAMmE,KAAKC,OACrBH,EAAGJ,EAAOK,iBAEZX,EAAgBO,KAAK,CACnBC,EAAGF,EAAO7D,MAAMmE,KAAK9E,OACrB4E,EAAGJ,EAAOK,iBAGZV,EAA0BM,KAAK,CAC7BC,EAAGF,EAAO7D,MAAMqE,OAAO5E,eACvBwE,EAAGJ,EAAOK,iBAEZT,EAAqBK,KAAK,CACxBC,EAAGF,EAAO7D,MAAMqE,OAAO3E,UACvBuE,EAAGJ,EAAOK,iBAEZR,EAAsBI,KAAK,CACzBC,EAAGF,EAAO7D,MAAMqE,OAAO1E,WACvBsE,EAAGJ,EAAOK,iBAEZP,EAAqBG,KAAK,CACxBC,EAAGF,EAAO7D,MAAMqE,OAAOzE,UACvBqE,EAAGJ,EAAOK,iBAGZN,EAAuBE,KAAK,CAC1BC,EAAGF,EAAO7D,MAAMqE,OAAOC,YACvBL,EAAGJ,EAAOK,kBA/C0C,8BAkDxD,MAAO,CACLb,gBACAC,iBACAC,kBACAC,4BACAC,uBACAC,wBACAC,uBACAC,0BAgCuBW,CAAiBzC,EAASlE,KAAK4G,QAGxD,OAFArD,GAAW,GAGT,yBAAK3B,UAAU,OACb,yBAAKA,UAAU,YAAYiF,MAAO,CAAEC,aAAc,OAChD,yBAAKlF,UAAW4B,EAAQP,MACtB,kBAAC8D,EAAA,EAAD,CAAQC,SAAS,UACf,kBAACC,EAAA,EAAD,CACE7E,MAAOA,EACP8E,SA1BS,SAACC,EAAQC,GAC5B1D,EAAS0D,IA0BCC,eAAe,aAEf,kBAACC,EAAA,EAAD,eAAKC,MAAM,UAAa1E,EAAU,KAClC,kBAACyE,EAAA,EAAD,eAAKC,MAAM,QAAW1E,EAAU,KAChC,kBAACyE,EAAA,EAAD,eAAKC,MAAM,kBAAqB1E,EAAU,OAG9C,kBAACZ,EAAD,CAAUG,MAAOA,EAAOC,MAAO,GAC7B,yBAAKT,UAAU,OACb,yBAAKA,UAAU,YACb,kBAAC,EAAD,CAAU3B,WAAYsF,EAAiBE,iBAEzC,yBAAK7D,UAAU,YACb,kBAAC4F,EAAD,CACEjG,0BACEgE,EAAiBS,4BAM3B,kBAAC/D,EAAD,CAAUG,MAAOA,EAAOC,MAAO,GAC7B,yBAAKT,UAAU,aACb,kBAAC6F,EAAD,CACEhG,OAAQ8D,EAAiBI,gBACzBhE,MAAO4D,EAAiBG,mBAI9B,kBAACzD,EAAD,CAAUG,MAAOA,EAAOC,MAAO,GAC7B,yBAAKT,UAAU,aACb,kBAAC,EAAD,CACEC,eAAgB0D,EAAiBK,0BACjC9D,UAAWyD,EAAiBM,qBAC5B9D,WAAYwD,EAAiBO,sBAC7B9D,UAAWuD,EAAiBQ,6B,kBGzK7B2B,EAZuB,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAEvC,OADAA,GAAa,GAEX,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,yCACA,kBAAC,EAAD,CAAetE,WAAYoE,OCRpBG,EAJW,WACxB,OAAO,gDCGMC,EAJQ,WACrB,OAAO,6CCGMC,EAJY,WACzB,OAAO,iDCGMC,GAJM,WACnB,OAAO,2CCGMC,GAJU,WACvB,OAAO,kDC6BMC,GAnBuB,SAAC,GAAsB,IAApBR,EAAmB,EAAnBA,aACvC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACES,OAAO,EACPC,KAAK,IACLC,OAAQ,SAAApG,GAAK,OAAI,kBAAC,EAAD,CAAWyF,aAAcA,OAE5C,kBAAC,IAAD,CAAOU,KAAK,cAAcE,UAAWP,IACrC,kBAAC,IAAD,CAAOK,KAAK,QAAQE,UAAWN,KAC/B,kBAAC,IAAD,CAAOI,KAAK,aAAaE,UAAWT,IACpC,kBAAC,IAAD,CAAOO,KAAK,UAAUE,UAAWR,IACjC,kBAAC,IAAD,CAAOM,KAAK,YAAYE,UAAWL,Q,qJCArCpF,GAAYC,aAAW,SAAAC,GAAK,MAAK,CAErCC,KAAM,CACJuF,QAAS,QAGXC,OAAQ,CACNC,YAAa1F,EAAM2F,QAAQ,GAC3BxF,gBAAiB,WAGnByF,YAAa,CACX5B,SAAU,WACV6B,WAAY,SACZ3H,MAhBgB,IAiBhB4H,WAAY9F,EAAM+F,YAAYC,OAAO,QAAS,CAC5CzI,OAAQyC,EAAM+F,YAAYxI,OAAO0I,MACjCC,SAAUlG,EAAM+F,YAAYG,SAASC,kBAGzCC,iBAAiB,cACfC,UAAW,SACXP,WAAY9F,EAAM+F,YAAYC,OAAO,QAAS,CAC5CzI,OAAQyC,EAAM+F,YAAYxI,OAAO0I,MACjCC,SAAUlG,EAAM+F,YAAYG,SAASI,gBAEvCpI,MAAO8B,EAAM2F,QAAQ,IACpB3F,EAAMuG,YAAYC,GAAG,MAAQ,CAC5BtI,MAAO8B,EAAM2F,QAAQ,KAGzBc,YAAY,aACVjB,QAAS,OACTkB,WAAY,SACZC,eAAgB,WAChBC,QAAS,SACN5G,EAAM6G,OAAOC,SAGlBC,SAAU,CACR/C,SAAU,WACVgD,OAAQ,EACRN,WAAY,cAqHDO,GA5GmB,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,kBAAmBC,EAAW,EAAXA,KAChD3G,EAAUV,KADiD,EAIzBW,oBAAS,GAJgB,mBAI1D2G,EAJ0D,KAI5CC,EAJ4C,KAK3DC,EAAe,WACnBD,GAAiBD,IAEbG,EACJ,6BACE,kBAACC,GAAA,EAAD,CAAUC,QAAQ,EAAMlC,UAAWmC,IAAMC,GAAG,KAC1C,kBAACC,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,eAExB,kBAACN,GAAA,EAAD,CAAUC,QAAQ,EAAMlC,UAAWmC,IAAMC,GAAG,eAC1C,kBAACC,GAAA,EAAD,KACE,kBAACG,GAAA,EAAD,OAEF,kBAACF,GAAA,EAAD,CAAcC,QAAQ,gBAExB,kBAACN,GAAA,EAAD,CAAUC,QAAQ,GAChB,kBAACG,GAAA,EAAD,KACE,kBAACI,GAAA,EAAD,OAEF,kBAACH,GAAA,EAAD,CAAcC,QAAQ,QAAQG,QAASX,IACtCH,EACC,kBAACe,GAAA,EAAD,CAAgBD,QAASX,IAEzB,kBAACa,GAAA,EAAD,CAAgBF,QAASX,KAI7B,kBAACc,GAAA,EAAD,CAAUC,GAAIjB,EAAckB,QAAQ,OAAOC,eAAe,GACxD,kBAACC,GAAA,EAAD,CAAMjD,UAAU,MAAMkD,gBAAgB,GACpC,kBAACjB,GAAA,EAAD,CACEC,QAAQ,EACRlC,UAAWmC,IACXC,GAAG,QACH/I,UAAW4B,EAAQiF,QAEnB,kBAACmC,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,UAExB,kBAACN,GAAA,EAAD,CACEC,QAAQ,EACRlC,UAAWmC,IACXC,GAAG,aACH/I,UAAW4B,EAAQiF,QAEnB,kBAACmC,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,eAExB,kBAACN,GAAA,EAAD,CACEC,QAAQ,EACRlC,UAAWmC,IACXC,GAAG,UACH/I,UAAW4B,EAAQiF,QAEnB,kBAACmC,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,eAOhC,OACE,yBAAKlJ,UAAW4B,EAAQP,MACtB,kBAAC,IAAD,KACE,kBAACyI,GAAA,EAAD,CACEC,QAAQ,YACRnI,QAAS,CACPH,MAAOuI,YAAKpI,EAAQoF,aAAcuB,GAAQ3G,EAAQ4F,mBAEpDe,KAAMA,GAEN,yBAAKvI,UAAW4B,EAAQiG,aACtB,kBAACoC,EAAA,EAAD,CAAYZ,QAASf,GACnB,kBAAC4B,GAAA,EAAD,QAGJ,kBAACC,GAAA,EAAD,MACA,kBAACP,GAAA,EAAD,KAAOjB,GACP,kBAACC,GAAA,EAAD,CACEC,QAAQ,EACRlC,UAAWmC,IACXC,GAAG,YACH/I,UAAW4B,EAAQuG,UAEnB,kBAACa,GAAA,EAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,EAAD,CAAcC,QAAQ,kBC1J5BkB,GAAajJ,aAAW,SAAAC,GAAK,MAAK,CAEtCiJ,OAAQ,CACNC,OAAQlJ,EAAMkJ,OAAOC,OAAS,EAC9BrD,WAAY9F,EAAM+F,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDzI,OAAQyC,EAAM+F,YAAYxI,OAAO0I,MACjCC,SAAUlG,EAAM+F,YAAYG,SAASI,iBAGzC8C,YAAa,CACXC,WAZgB,IAahBnL,MAAM,eAAD,OAbW,IAaX,OACL4H,WAAY9F,EAAM+F,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDzI,OAAQyC,EAAM+F,YAAYxI,OAAO0I,MACjCC,SAAUlG,EAAM+F,YAAYG,SAASC,kBAGzCmD,MAAO,CACLpJ,SAAU,GAGZ4G,QAAS,CACPyC,aAAc,IAGhBC,WAAY,CACVC,YAAa,IAEfC,iBAAkB,CAChBlE,QAAS,YAIP1F,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJuF,QAAS,QAEXmE,MAAO,CACL7B,QAAS9H,EAAMI,QAAQ0H,SAGzB8B,aAAc5J,EAAM6G,OAAOC,QAC3B+C,QAAS,CACP3J,SAAU,EACV5B,OAAQ,QACRwL,SAAU,QAEZC,UAAW,CACTC,WAAYhK,EAAM2F,QAAQ,GAC1BsE,cAAejK,EAAM2F,QAAQ,QAIlB,SAASuE,KAEtB,IAAM1J,EAAUV,KACVqK,EAAWnB,KAHgC,EAIrBvI,oBAAkB,GAJG,mBAI1C2J,EAJ0C,KAIlCC,EAJkC,KAM3C1F,EAAe2F,uBAAY,SAACrJ,GAChCoJ,EAAUpJ,KACT,IAR8C,EAWzBR,oBAAS,GAXgB,mBAW1C0G,EAX0C,KAWpCoD,EAXoC,KAmBjD,OACE,yBAAK3L,UAAW4B,EAAQP,MACtB,kBAACuK,EAAA,EAAD,MAEA,yBAAK5L,UAAU,WACb,kBAACmF,EAAA,EAAD,CACEC,SAAS,WACTpF,UAAWgK,YAAKuB,EAASlB,OAAQ9B,GAAQgD,EAASf,cAElD,kBAACqB,EAAA,EAAD,CAAS7L,UAAWuL,EAASrD,SAC3B,kBAAC+B,EAAA,EAAD,CACE6B,KAAK,QACLf,MAAM,UACNgB,aAAW,cACX1C,QArBa,WACvBsC,GAAQ,IAqBE3L,UAAWgK,YACTuB,EAASX,WACTrC,GAAQgD,EAAST,mBAGnB,kBAACkB,EAAA,EAAD,OAEF,kBAACC,EAAA,EAAD,CACEtF,UAAU,KACVoD,QAAQ,KACRgB,MAAM,UACNmB,QAAQ,EACRlM,UAAWuL,EAASb,OALtB,gBASA,kBAACT,EAAA,EAAD,CAAYc,MAAM,WAChB,kBAACoB,EAAA,EAAD,CAAOC,aAAc,EAAGrB,MAAM,aAC5B,kBAACsB,EAAA,EAAD,SAILb,EAAS,kBAACc,EAAA,EAAD,MAAqB,OAGnC,kBAAC,GAAD,CAAShE,kBA5Ca,WACxBqD,GAAQ,IA2CyCpD,KAAMA,IACrD,0BAAMvI,UAAW4B,EAAQqJ,SACvB,yBAAKjL,UAAW4B,EAAQoJ,eACxB,kBAACuB,EAAA,EAAD,CAAWC,SAAS,KAAKxM,UAAW4B,EAAQuJ,WAC1C,kBAAC,GAAD,CAAWpF,aAAcA,OChInC,IAAI3E,GAAQqL,YAAe,CACzBjL,QAAS,CAGP0H,QAASwD,KAGXC,WAAY,CACVC,WAAY,CAAC,OAAQ,WAAWC,KAAK,KACrCC,SAAU,MAGd1L,GAAQ2L,YAAoB3L,IAUb4L,OARf,WACE,OACE,kBAACC,EAAA,EAAD,CAAe7L,MAAOA,IACpB,kBAACkK,GAAD,Q,MChBc4B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAAS7G,OAAO,kBAAC,GAAD,MAAS8G,SAASC,eAAe,SDqI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAxL,GACLyL,QAAQzL,MAAMA,EAAM0L,c","file":"static/js/main.57ad4480.chunk.js","sourcesContent":["enum TimeInstance {\n\tMicrosecond = 1000,\n\tMillisecond = 1000000,\n\tSecond = 1000000000,\n\tMinute = 60000000000,\n\tHour = 60 * 60000000000,\n\tDay = 24 * 60 * 60000000000,\n};\n\nexport default TimeInstance;","import React, { FC } from 'react';\nimport Chart from 'react-apexcharts';\nimport { chartData } from '../../utils/queryTypes';\n\ninterface CPUUsageProps {\n  cpuMetrics: chartData[];\n}\n\nconst CPUUsage: FC<CPUUsageProps> = ({ cpuMetrics }) => {\n  const dataFormatted = cpuMetrics;\n  const series = [\n    {\n      name: 'CPU',\n      data: dataFormatted\n    }\n  ];\n  const options = {\n    chart: {\n      type: 'area',\n      animations: {\n        enabled: true,\n        easing: 'easeinout',\n        speed: 800,\n        animateGradually: {\n          enabled: true,\n          delay: 150\n        },\n        dynamicAnimation: {\n          enabled: true,\n          speed: 350\n        }\n      },\n      background: '#fff'\n    },\n    datalabels: {\n      enabled: false\n    },\n    stroke: {\n      show: true,\n      curve: 'straight',\n      lineCap: 'butt',\n      width: 3\n    },\n    subtitle: {\n      text: 'CPU usage (in percent)',\n      align: 'center'\n    }\n  };\n\n  return (\n    <>\n      <Chart series={series} options={options} height=\"300\" />\n    </>\n  );\n};\n\nexport default React.memo(CPUUsage);\n","import React, { FC } from 'react';\nimport Chart from 'react-apexcharts';\nimport { chartData } from '../../utils/queryTypes';\n\ninterface MemoryUsagePercentProps {\n  memoryUsagePercentMetrics: chartData[];\n}\n\nconst MemoryUsagePercent: FC<MemoryUsagePercentProps> = ({\n  memoryUsagePercentMetrics\n}) => {\n  const dataFormatted = memoryUsagePercentMetrics;\n  const series = [\n    {\n      name: 'Memory',\n      data: dataFormatted\n    }\n  ];\n  const options = {\n    chart: {\n      type: 'area',\n      animations: {\n        enabled: true,\n        easing: 'easeinout',\n        speed: 800,\n        animateGradually: {\n          enabled: true,\n          delay: 150\n        },\n        dynamicAnimation: {\n          enabled: true,\n          speed: 350\n        }\n      },\n      background: '#fff'\n    },\n    datalabels: {\n      enabled: false\n    },\n    stroke: {\n      show: true,\n      curve: 'straight',\n      lineCap: 'butt',\n      width: 3\n    },\n    subtitle: {\n      text: 'Memory (RAM) usage  (in percent)',\n      align: 'center'\n    }\n  };\n\n  return (\n    <>\n      <Chart series={series} options={options} height=\"300\" />\n    </>\n  );\n};\n\nexport default React.memo(MemoryUsagePercent);\n","import React, { FC } from 'react';\nimport Chart from 'react-apexcharts';\nimport { chartData } from '../../utils/queryTypes';\n\ninterface DiskUsageProps {\n  diskIO: chartData[];\n  cache: chartData[];\n}\n\nconst DiskUsage: FC<DiskUsageProps> = ({ diskIO, cache }) => {\n  const seriesDiskIO = [\n    {\n      name: 'Disk IO in bytes (+ve means write / -ve means read)',\n      data: diskIO\n    }\n  ];\n  const seriesCache = [\n    {\n      name: 'Cache (in bytes)',\n      data: cache\n    }\n  ];\n\n  const optionsDiskIO = {\n    chart: {\n      type: 'area',\n      animations: {\n        enabled: true,\n        easing: 'easeinout',\n        speed: 800,\n        animateGradually: {\n          enabled: true,\n          delay: 150\n        },\n        dynamicAnimation: {\n          enabled: true,\n          speed: 350\n        }\n      },\n      background: '#fff'\n    },\n    datalabels: {\n      enabled: false\n    },\n    stroke: {\n      show: true,\n      curve: 'straight',\n      lineCap: 'butt',\n      width: 3\n    },\n    subtitle: {\n      text: 'Disk IO in bytes (+ve means write / -ve means read)',\n      align: 'center'\n    }\n  };\n  const optionsCache = {\n    chart: {\n      type: 'area',\n      animations: {\n        enabled: true,\n        easing: 'easeinout',\n        speed: 800,\n        animateGradually: {\n          enabled: true,\n          delay: 150\n        },\n        dynamicAnimation: {\n          enabled: true,\n          speed: 350\n        }\n      },\n      background: '#fff'\n    },\n    datalabels: {\n      enabled: false\n    },\n    stroke: {\n      show: true,\n      curve: 'straight',\n      lineCap: 'butt',\n      width: 3\n    },\n    subtitle: {\n      text: 'Cache (in bytes)',\n      align: 'center'\n    }\n  };\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-md-6\">\n        <Chart series={seriesDiskIO} options={optionsDiskIO} height=\"300\" />\n      </div>\n      <div className=\"col-md-6\">\n        <Chart series={seriesCache} options={optionsCache} height=\"300\" />\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(DiskUsage);\n","import React, { FC } from 'react';\nimport Chart from 'react-apexcharts';\nimport { chartData } from '../../utils/queryTypes';\n\ninterface MemoryDetailsProps {\n  availableBytes: chartData[];\n  freeBytes: chartData[];\n  totalBytes: chartData[];\n  usedBytes: chartData[];\n}\n\nconst MemoryDetails: FC<MemoryDetailsProps> = ({\n  availableBytes,\n  freeBytes,\n  totalBytes,\n  usedBytes\n}) => {\n  const series = [\n    {\n      name: 'Available',\n      data: availableBytes\n    },\n    {\n      name: 'Free',\n      data: freeBytes\n    },\n    {\n      name: 'Total',\n      data: totalBytes\n    },\n    {\n      name: 'Used',\n      data: usedBytes\n    }\n  ];\n  const options = {\n    chart: {\n      type: 'area',\n      animations: {\n        enabled: true,\n        easing: 'easeinout',\n        speed: 800,\n        animateGradually: {\n          enabled: true,\n          delay: 150\n        },\n        dynamicAnimation: {\n          enabled: true,\n          speed: 350\n        }\n      },\n      background: '#fff'\n    },\n    datalabels: {\n      enabled: false\n    },\n    stroke: {\n      show: true,\n      curve: 'straight',\n      lineCap: 'butt',\n      width: 3\n    },\n    subtitle: {\n      text: 'Memory (RAM) details (in kilo-bytes)',\n      align: 'center'\n    }\n  };\n\n  return (\n    <>\n      <Chart series={series} options={options} height=\"500\" />\n    </>\n  );\n};\n\nexport default React.memo(MemoryDetails);\n","import React, { FC, useEffect } from 'react';\nimport { useFetch } from '../../utils/useFetch';\nimport CPUUsage from './CPUUsage';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport PropTypes from 'prop-types';\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Alert from '@material-ui/lab/Alert';\nimport MemoryUsagePercent from './MemoryUsage';\nimport DiskUsage from './Disk';\nimport MemoryDetails from './MemoryDetails';\nimport TimeInstance from '../../utils/brt';\nimport { HOST_IP } from '../../utils/types';\nimport { QueryResponse, QueryValues, chartData } from '../../utils/queryTypes';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper\n  }\n}));\n\nconst segregateMetrics = (metricValues: QueryValues[]) => {\n  const cpuUsageSlice: chartData[] = [];\n\n  const diskSliceCache: chartData[] = [];\n  const diskSliceDiskIO: chartData[] = [];\n\n  const memorySliceAvailableBytes: chartData[] = [];\n  const memorySliceFreeBytes: chartData[] = [];\n  const memorySliceTotalBytes: chartData[] = [];\n  const memorySliceUsedBytes: chartData[] = [];\n\n  const memoryUsedPercentSlice: chartData[] = [];\n\n  for (const metric of metricValues) {\n    cpuUsageSlice.push({\n      y: metric.value.cpuTotalUsage,\n      x: metric.normalizedTime\n    });\n\n    diskSliceCache.push({\n      y: metric.value.disk.cached,\n      x: metric.normalizedTime\n    });\n    diskSliceDiskIO.push({\n      y: metric.value.disk.diskIO,\n      x: metric.normalizedTime\n    });\n\n    memorySliceAvailableBytes.push({\n      y: metric.value.memory.availableBytes,\n      x: metric.normalizedTime\n    });\n    memorySliceFreeBytes.push({\n      y: metric.value.memory.freeBytes,\n      x: metric.normalizedTime\n    });\n    memorySliceTotalBytes.push({\n      y: metric.value.memory.totalBytes,\n      x: metric.normalizedTime\n    });\n    memorySliceUsedBytes.push({\n      y: metric.value.memory.usedBytes,\n      x: metric.normalizedTime\n    });\n\n    memoryUsedPercentSlice.push({\n      y: metric.value.memory.usedPercent,\n      x: metric.normalizedTime\n    });\n  }\n  return {\n    cpuUsageSlice,\n    diskSliceCache,\n    diskSliceDiskIO,\n    memorySliceAvailableBytes,\n    memorySliceFreeBytes,\n    memorySliceTotalBytes,\n    memorySliceUsedBytes,\n    memoryUsedPercentSlice\n  };\n};\n\ninterface SystemMetricsProps {\n  showLoader(status: boolean): any;\n}\n\nconst SystemMetrics: FC<SystemMetricsProps> = ({ showLoader }) => {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n  const endTimestamp = new Date().getTime() * 1000000 - TimeInstance.Hour;\n\n  useEffect(() => {\n    showLoader(true);\n  }, [showLoader]);\n  const handleChange = (_event, newValue) => {\n    setValue(newValue);\n  };\n\n  const { response, error } = useFetch<QueryResponse>(\n    `${HOST_IP}/query?timeSeriesPath=storage/system&endTimestamp=${endTimestamp}`\n  );\n\n  if (error) {\n    showLoader(false);\n    return <Alert severity=\"error\">Unable to reach the service: error</Alert>;\n  }\n  if (!response.data) {\n    return <Alert severity=\"info\">Fetching data from sources</Alert>;\n  }\n\n  const responseInFormat = segregateMetrics(response.data.values);\n  showLoader(false);\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-md-12\" style={{ marginBottom: '1%' }}>\n        <div className={classes.root}>\n          <AppBar position=\"static\">\n            <Tabs\n              value={value}\n              onChange={handleChange}\n              indicatorColor=\"secondary\"\n            >\n              <Tab label=\"System\" {...a11yProps(0)} />\n              <Tab label=\"Disk\" {...a11yProps(1)} />\n              <Tab label=\"Memory details\" {...a11yProps(2)} />\n            </Tabs>\n          </AppBar>\n          <TabPanel value={value} index={0}>\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                <CPUUsage cpuMetrics={responseInFormat.cpuUsageSlice} />\n              </div>\n              <div className=\"col-md-6\">\n                <MemoryUsagePercent\n                  memoryUsagePercentMetrics={\n                    responseInFormat.memoryUsedPercentSlice\n                  }\n                />\n              </div>\n            </div>\n          </TabPanel>\n          <TabPanel value={value} index={1}>\n            <div className=\"col-md-12\">\n              <DiskUsage\n                diskIO={responseInFormat.diskSliceDiskIO}\n                cache={responseInFormat.diskSliceCache}\n              />\n            </div>\n          </TabPanel>\n          <TabPanel value={value} index={2}>\n            <div className=\"col-md-12\">\n              <MemoryDetails\n                availableBytes={responseInFormat.memorySliceAvailableBytes}\n                freeBytes={responseInFormat.memorySliceFreeBytes}\n                totalBytes={responseInFormat.memorySliceTotalBytes}\n                usedBytes={responseInFormat.memorySliceUsedBytes}\n              />\n            </div>\n          </TabPanel>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SystemMetrics;\n","import { useState, useEffect } from 'react';\n\nexport type APIResponse<T> = { status: string; data?: T };\n\nexport interface FetchState<T> {\n  response: APIResponse<T>;\n  error?: Error;\n  isLoading: boolean;\n}\n\nexport const useFetch = <T extends {}>(url: string, options?: RequestInit): FetchState<T> => {\n  const [response, setResponse] = useState<APIResponse<T>>({ status: 'start fetching' });\n  const [error, setError] = useState<Error>();\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [requestSent, setRequestSent] = useState<boolean>(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n        setRequestSent(true);\n        const res = await fetch(url, { cache: 'no-cache', credentials: 'same-origin', ...options });\n        if (!res.ok) {\n          setIsLoading(false);\n          setRequestSent(false);\n          throw new Error(res.statusText);\n        }\n        const json = (await res.json()) as APIResponse<T>;\n        setResponse(json);\n        setIsLoading(false);\n      } catch (error) {\n        setError(error);\n      }\n    };\n    if (!requestSent) {\n      setTimeout(() => {\n        fetchData();\n      }, 1000);\n    }\n  }, [url, options, requestSent]);\n  return { response, error, isLoading };\n};\n","export const HOST_IP = 'http://localhost:9090';\n\nexport interface service_states {\n  ping: string;\n  floodping: string;\n  jitter: string;\n  monitoring: string;\n}\n\n// System Value details\nexport interface SystemValue {\n  range: rangeValues;\n  queryTime: number;\n  values: dataValues[];\n}\n\ninterface rangeValues {\n  start: any;\n  end: any;\n}\n\ninterface dataValues {\n  Value: dataValue;\n  timestamp: string;\n  normalizedTimes: string;\n}\n\ninterface dataValue {\n  cpuTotalUsage: any;\n  memory: memoryDetails;\n  disk: diskDetails;\n}\n\ninterface memoryDetails {\n  totalBytes: string;\n  availableBytes: string;\n  usedBytes: string;\n  usedPercent: any;\n  freeBytes: any;\n}\n\ninterface diskDetails {\n  diskIO: string;\n  cached: string;\n}\n","import React, { FC } from 'react';\nimport SystemMetrics from './SystemMetrics';\nimport { Card, CardContent } from '@material-ui/core';\n\ninterface DashboardProps {\n  updateLoader(status: boolean): void;\n}\n\nconst Dashboard: FC<DashboardProps> = ({ updateLoader }) => {\n  updateLoader(true);\n  return (\n    <Card>\n      <CardContent>\n        <h4>Dashboard</h4>\n        <SystemMetrics showLoader={updateLoader} />\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default Dashboard;\n","import React, { FC } from 'react';\n\nconst FloodPing: FC<{}> = () => {\n  return <div>FloodPing page</div>;\n};\n\nexport default FloodPing;\n","import React, { FC } from 'react';\n\nconst Jitter: FC<{}> = () => {\n  return <div>Jitter Page</div>;\n};\n\nexport default Jitter;\n","import React, { FC } from 'react';\n\nconst Monitoring: FC<{}> = () => {\n  return <div>Monitoring Page</div>;\n};\n\nexport default Monitoring;\n","import React, { FC } from 'react';\n\nconst Ping: FC<{}> = () => {\n  return <div>Ping Page</div>;\n};\n\nexport default Ping;\n","import React, { FC } from 'react';\n\nconst Settings: FC<{}> = () => {\n  return <div>This is settings</div>;\n};\n\nexport default Settings;\n","import React, { FC } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Dashboard from '../pages/Dashboard/Dashboard';\nimport FloodPing from '../pages/FloodPing';\nimport Jitter from '../pages/Jitter';\nimport Monitoring from '../pages/Monitoring';\nimport Ping from '../pages/Ping';\nimport Settings from '../pages/Settings';\n\ninterface NavigatorProps {\n  updateLoader(status: boolean): void;\n}\n\nconst Navigator: FC<NavigatorProps> = ({ updateLoader }) => {\n  return (\n    <Router>\n      <Switch>\n        <Route\n          exact={true}\n          path=\"/\"\n          render={props => <Dashboard updateLoader={updateLoader} />}\n        />\n        <Route path=\"/monitoring\" component={Monitoring} />\n        <Route path=\"/ping\" component={Ping} />\n        <Route path=\"/floodping\" component={FloodPing} />\n        <Route path=\"/jitter\" component={Jitter} />\n        <Route path=\"/settings\" component={Settings} />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default Navigator;\n","import {\n  Collapse,\n  Divider,\n  Drawer,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  AccessAlarm as AccessAlarmIcon,\n  ChevronLeft as ChevronLeftIcon,\n  Dashboard as DashboardIcon,\n  ExpandLess as ExpandLessIcon,\n  ExpandMore as ExpandMoreIcon,\n  NetworkCheck as NetworkCheckIcon,\n  Settings as SettingsIcon\n} from '@material-ui/icons';\nimport clsx from 'clsx';\nimport React, { FC, useState } from 'react';\nimport { HashRouter as Router, Link } from 'react-router-dom';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  // root class\n  root: {\n    display: 'flex'\n  },\n  // Nested lists\n  nested: {\n    paddingLeft: theme.spacing(4),\n    backgroundColor: '#DCDCDC'\n  },\n  // Drawer styles\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9)\n    }\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar\n  },\n  // SettingsIcon\n  settings: {\n    position: 'absolute',\n    bottom: 0,\n    alignItems: 'center'\n  }\n}));\n\ninterface SidebarProps {\n  open: boolean;\n  handleDrawerClose(): void;\n}\n\nconst Sidebar: FC<SidebarProps> = ({ handleDrawerClose, open }) => {\n  const classes = useStyles();\n\n  // Sidebar element\n  const [testListOpen, setTestListOpen] = useState(false);\n  const showTestList = () => {\n    setTestListOpen(!testListOpen);\n  };\n  const menuItems = (\n    <div>\n      <ListItem button={true} component={Link} to=\"/\">\n        <ListItemIcon>\n          <DashboardIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Dashboard\" />\n      </ListItem>\n      <ListItem button={true} component={Link} to=\"/monitoring\">\n        <ListItemIcon>\n          <AccessAlarmIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Monitoring\" />\n      </ListItem>\n      <ListItem button={true}>\n        <ListItemIcon>\n          <NetworkCheckIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Tests\" onClick={showTestList} />\n        {open ? (\n          <ExpandLessIcon onClick={showTestList} />\n        ) : (\n          <ExpandMoreIcon onClick={showTestList} />\n        )}\n      </ListItem>\n      {/* Nested List */}\n      <Collapse in={testListOpen} timeout=\"auto\" unmountOnExit={true}>\n        <List component=\"div\" disablePadding={true}>\n          <ListItem\n            button={true}\n            component={Link}\n            to=\"/ping\"\n            className={classes.nested}\n          >\n            <ListItemIcon>\n              <DashboardIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Ping\" />\n          </ListItem>\n          <ListItem\n            button={true}\n            component={Link}\n            to=\"/floodping\"\n            className={classes.nested}\n          >\n            <ListItemIcon>\n              <DashboardIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"FloodPing\" />\n          </ListItem>\n          <ListItem\n            button={true}\n            component={Link}\n            to=\"/jitter\"\n            className={classes.nested}\n          >\n            <ListItemIcon>\n              <DashboardIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Jitter\" />\n          </ListItem>\n        </List>\n      </Collapse>\n    </div>\n  );\n\n  return (\n    <div className={classes.root}>\n      <Router>\n        <Drawer\n          variant=\"permanent\"\n          classes={{\n            paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose)\n          }}\n          open={open}\n        >\n          <div className={classes.toolbarIcon}>\n            <IconButton onClick={handleDrawerClose}>\n              <ChevronLeftIcon />\n            </IconButton>\n          </div>\n          <Divider />\n          <List>{menuItems}</List>\n          <ListItem\n            button={true}\n            component={Link}\n            to=\"/settings\"\n            className={classes.settings}\n          >\n            <ListItemIcon>\n              <SettingsIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Settings\" />\n          </ListItem>\n        </Drawer>\n      </Router>\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import { CssBaseline } from '@material-ui/core';\nimport { Container } from '@material-ui/core';\nimport {\n  AppBar,\n  Badge,\n  IconButton,\n  Toolbar,\n  Typography\n} from '@material-ui/core';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Menu as MenuIcon,\n  Notifications as NotificationsIcon\n} from '@material-ui/icons';\nimport clsx from 'clsx';\nimport React, { ReactElement, useCallback, useState } from 'react';\nimport Navigator from '../router/Navigation';\n// import Navbar from './Navbar';\nimport Sidebar from './Sidebar';\n\nconst drawerWidth = 240;\n\nconst _useStyles = makeStyles(theme => ({\n  // AppBar styles\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  title: {\n    flexGrow: 1\n  },\n  // Toolbar styles\n  toolbar: {\n    paddingRight: 24 // keep right padding when drawer closed\n  },\n  // IconMenu styles\n  menuButton: {\n    marginRight: 36\n  },\n  menuButtonHidden: {\n    display: 'none'\n  }\n}));\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  color: {\n    primary: theme.palette.primary\n  },\n  // Content styles\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto'\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4)\n  }\n}));\n\nexport default function BaseLayout(): ReactElement {\n  // Access styles\n  const classes = useStyles();\n  const _classes = _useStyles();\n  const [loader, setLoader] = useState<boolean>(false);\n\n  const updateLoader = useCallback((status: boolean) => {\n    setLoader(status);\n  }, []);\n\n  // Opens and closes the drawer\n  const [open, setOpen] = useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      {/* Navbar */}\n      <div className=\"_navbar\">\n        <AppBar\n          position=\"absolute\"\n          className={clsx(_classes.appBar, open && _classes.appBarShift)}\n        >\n          <Toolbar className={_classes.toolbar}>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={handleDrawerOpen}\n              className={clsx(\n                _classes.menuButton,\n                open && _classes.menuButtonHidden\n              )}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography\n              component=\"h1\"\n              variant=\"h6\"\n              color=\"inherit\"\n              noWrap={true}\n              className={_classes.title}\n            >\n              Bench Routes\n            </Typography>\n            <IconButton color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n          </Toolbar>\n          {loader ? <LinearProgress /> : null}\n        </AppBar>\n      </div>\n      <Sidebar handleDrawerClose={handleDrawerClose} open={open} />\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Navigator updateLoader={updateLoader} />\n        </Container>\n      </main>\n    </div>\n  );\n}\n","import { blue } from '@material-ui/core/colors';\nimport {\n  createMuiTheme,\n  responsiveFontSizes,\n  ThemeProvider\n} from '@material-ui/core/styles';\nimport React from 'react';\nimport './App.css';\nimport './assets/bootstrap.min.css';\nimport BaseLayout from './layouts/BaseLayout';\n\nlet theme = createMuiTheme({\n  palette: {\n    // Provides you with all\n    // shades of whites\n    primary: blue\n    // secondary: <Color>,\n  },\n  typography: {\n    fontFamily: ['Lato', 'Raleway'].join(','),\n    fontSize: 12\n  }\n});\ntheme = responsiveFontSizes(theme);\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <BaseLayout />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}